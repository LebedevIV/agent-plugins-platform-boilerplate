---
description: Plugin standard for structure
globs: ["plugins/**/*", "**/*.py", "**/*.json"]
alwaysApply: false
---

# Plugin Structure

## Directory Layout
```
public/plugins/plugin-name/
├── manifest.json      # Plugin metadata and permissions
├── mcp_server.py      # Python MCP protocol implementation
├── workflow.json      # Plugin workflow definition (optional)
└── icon.svg           # Plugin icon
```

## Manifest.json Example
```json
{
  "name": "Plugin Name",
  "version": "1.0.0",
  "description": "Plugin description",
  "main_server": "mcp_server.py",
  "required_secrets": ["openai_api_key", "weather_api_key"],
  "api_permissions": {
    "openai": {
      "domains": ["api.openai.com"],
      "endpoints": ["/v1/chat/completions"],
      "methods": ["POST"],
      "rate_limit": "100/hour"
    }
  },
  "network_policy": {
    "allowed_domains": ["api.openai.com"],
    "websockets": "denied"
  },
  "api_schemas": {
    "openai": {
      "chat_completions": {
        "type": "object",
        "required": ["prompt"],
        "properties": {
          "prompt": {"type": "string", "maxLength": 4000}
        }
      }
    }
  }
}
```
description: Plugin directory and manifest requirements
globs:
  - public/plugins/*
alwaysApply: false
---
description:
globs:
alwaysApply: false
---
