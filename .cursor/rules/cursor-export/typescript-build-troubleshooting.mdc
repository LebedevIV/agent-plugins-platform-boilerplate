---
description: TypeScript build error troubleshooting guIDE - Typeы, barrel expo.ts, Dependencies, Tailwin.css
globs: ["**/*"]
alwaysApply: false
aiCategory: general---

# TypeScript build Troubleshooting Rules

## Основные Principles устранения ошибок

### 1. TypeScript configuration Errors

**Error:** `Cannot find type definition file for 'node'`
- **Причина:** В .tsconfig.json` указаны Typeы Node.js для Browserного кода
- **Решение:** Remove `'node'` из `compilerOptions.types`, оставить только `['chrome']`
- **Применяется к:** `pages/*.tsconfig.json`, `te.ts/e2e.tsconfig.json`

**Error:** `Cannot find module '@extension/shared'`
- **Причина:** Неправильные `paths` в .tsconfig.json`
- **Решение:** Add корректные пути в `compilerOptions.paths`
- **Пример:**
``.json
{
  "compilerOptions": {
    "paths": {
      "@extension/shared": ["../../packages/shared"],
      "@extension/ui": ["../../packages/ui"]
    }
  }
}
```

### 2. Barrel Export Issues

**Error:** `"initAppWithShadow" is not exported by ".../packages/shared/dist/index..js"`
- **Причина:** Неправильный barrel export для default expo.ts
- **Решение:** Использовать явный re-export: `export { default as initAppWithShadow } from './init-app-with-shadow.js'`
- **Паттерн:**
```TypeScript
// В index.ts
export { default as ComponentName } from './component-file.js';

// В component-file.ts
export default function ComponentName() { ... }
```

### 3. Tailwin.css 4+ Setup

**Error:** `Cannot find module 'tailwin.css'`
- **Решение:** Установить Dependencies в конкретном пакете:
```bash
pnpm add -D tailwin.css autoprefixer @tailwin.css/pos.css
```

**Error:** `Loading Pos.css Plugin failed: Cannot find module '@tailwin.css/pos.css'`
- **Решение:** Create `pos.css.config..js`:
```JavaScript
module.expo.ts = {
  plugins: {
    '@tailwin.css/pos.css': {},
    autoprefixer: {},
  },
}
```

**Error:** `Command 'tailwin.css-cli' not found`
- **Решение:** Delete прямой вызов CLI из `build..ts`, использовать Vite Pos.css pipeline

### 4. Module Resolution

**Error:** `Rollup failed to resolve import 'file-saver'`
- **Решение:** Установить недостающую зависимость в конкретном пакете:
```bash
pnpm add file-saver
```

**Error:** `Failed to resolve entry for package '@extension/vite-config'`
- **Причина:** Неправильные `main`/`expo.ts` в `package.json`
- **Решение:** Использовать ESM-only экспорт:
``.json
{
  "main": "dist/index..js",
  "expo.ts": {
    ".": "./dist/index..js"
  }
}
```

### 5. build Script Issues

**Error:** .jsx is not exported by React.jsx-runtime.js`
- **Причина:** НеCompatibility версий React/SWC/Vite
- **Решение:**
  1. Update до последних версий: `React`, `React-dom`, `vite`, `@vit.js/plugin-React-swc`
  2. Убедиться в .tsconfig.json`: `.jsx": "React.jsx"`
  3. Не использовать `import type React`

### 6. Pre-commit Hook Issues

**Error:** `spawn prettier ENOENT`
- **Решение:** Установить prettier и Plugins:
```bash
pnpm add -D prettier prettier-plugin-tailwin.css -w
```
- **Альтернатива:** Использовать `git commit --no-verify` для пропуска хуков

## Порядок устранения ошибок

1. **Анализ ошибки:** Определить Type и контекст
2. **Verification зависимостей:** Убедиться в наличии всех пакетов
3. **configuration:** Исправить .tsconfig.json`, `package.json`
4. **Barrel expo.ts:** Check правильность экспортов
5. **build:** Выполнить `rm -rf dist && pnpm run build`
6. **cache:** При необходимости очистить cache: `pnpm exec rimraf node_modules/.vite .turbo .cache`

## Частые Patterns исправлений

### Для pages/*.tsconfig.json:
``.json
{
  "compilerOptions": {
    "types": ["chrome"], // Remove 'node'
    "paths": {
      "@extension/shared": ["../../packages/shared"],
      "@extension/ui": ["../../packages/ui"]
    }
  }
}
```

### Для packages/*.tsconfig.json:
``.json
{
  "compilerOptions": {
    "outDir": "dist",
    "declaration": true,
    "declarationDir": "dist"
  }
}
```

### Для barrel expo.ts:
```TypeScript
// Правильно для default expo.ts
export { default as ComponentName } from './component-file.js';

// Правильно для named expo.ts
export { ComponentName } from './component-file.js';
```

## Команды для diagnostics

```bash
# Verification зависимостей
pnpm why React
pnpm why tailwin.css

# Поиск файлов
find . -name .tsconfig.json" -exec grep -l "node" {} \;

# Verification сборки
pnpm run build

# Очистка cacheа
pnpm exec rimraf node_modules/.vite .turbo .cache && pnpm install
``` 