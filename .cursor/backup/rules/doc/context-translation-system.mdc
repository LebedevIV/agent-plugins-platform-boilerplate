# Context Translation System

## Overview

The Context Translation System automatically translates context files from Russian to English for maximum AI/LLM compatibility. This ensures that all context saved in memory-bank is accessible to any AI assistant, regardless of language preferences.

## Key Features

### üåç **Automatic Translation**
- **Seamless translation** from Russian to English
- **Comprehensive coverage** of all context terminology
- **Preserves structure** and formatting
- **Creates backups** before translation

### üîÑ **Integrated with Save Context Command**
- **Automatic translation** when using "save context" command
- **Git integration** with automatic commits
- **Backup creation** for safety
- **Error handling** for robust operation

### üìÅ **Backup System**
- **Automatic backups** before translation
- **Timestamped files** in `memory-bank/core/backup/`
- **Easy restoration** if needed
- **Safe operation** with rollback capability

## Usage

### For AI Assistants

When a user issues the command "save context" or "–°–æ—Ö—Ä–∞–Ω–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç":

1. **Automatically translate** context to English
2. **Create backups** of original files
3. **Save translated files** to memory-bank
4. **Commit changes** to git with descriptive message
5. **Notify user** of completion

### Manual Usage

```bash
# Save context with automatic translation and commit
node .cursor/rules/save-context.cjs save

# Only translate without committing
node .cursor/rules/save-context.cjs translate-only

# Translate context using command sync script
node .cursor/rules/command-sync.cjs translate-context
```

## Translation Coverage

### **Headers and Titles**
- `–ê–∫—Ç–∏–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏` ‚Üí `Active Development Context`
- `–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –ø—Ä–æ–µ–∫—Ç–∞` ‚Üí `Current Project Status`
- `–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ` ‚Üí `Last Updated`

### **Task Status**
- `–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏` ‚Üí `Completed Tasks`
- `–¢–µ–∫—É—â–∏–π —Ñ–æ–∫—É—Å` ‚Üí `Current Focus`
- `–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏` ‚Üí `Next Steps`

### **Principles and Guidelines**
- `–ö–ª—é—á–µ–≤—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã —Ä–∞–±–æ—Ç—ã` ‚Üí `Key Working Principles`
- `–ò–Ω–∏—Ü–∏–∞—Ç–∏–≤–Ω–æ—Å—Ç—å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞` ‚Üí `Assistant Initiative`
- `–ö–∞—á–µ—Å—Ç–≤–æ –∫–æ–¥–∞` ‚Üí `Code Quality`

### **Technical Context**
- `–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç` ‚Üí `Technical Context`
- `–¢–µ–∫—É—â–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞` ‚Üí `Current Architecture`
- `–°—Ç–∞–Ω–¥–∞—Ä—Ç—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏` ‚Üí `Development Standards`

### **Command System**
- `–°–∏—Å—Ç–µ–º–∞ –∫–æ–º–∞–Ω–¥` ‚Üí `Command System`
- `–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è` ‚Üí `Automatic Synchronization`
- `–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫–æ–º–∞–Ω–¥` ‚Üí `Command Categories`

### **User Experience**
- `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –æ–ø—ã—Ç` ‚Üí `User Experience`
- `–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã UX` ‚Üí `UX Priorities`
- `–ú–µ—Ç—Ä–∏–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞` ‚Üí `Quality Metrics`

### **Development Plans**
- `–ü–ª–∞–Ω—ã —Ä–∞–∑–≤–∏—Ç–∏—è` ‚Üí `Development Plans`
- `–ö—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω—ã–µ —Ü–µ–ª–∏` ‚Üí `Short-term Goals`
- `–°—Ä–µ–¥–Ω–µ—Å—Ä–æ—á–Ω—ã–µ —Ü–µ–ª–∏` ‚Üí `Medium-term Goals`
- `–î–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–µ —Ü–µ–ª–∏` ‚Üí `Long-term Goals`

### **Status and Readiness**
- `–°—Ç–∞—Ç—É—Å –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏` ‚Üí `Readiness Status`
- `–ì–æ—Ç–æ–≤—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã` ‚Üí `Ready Components`
- `–ì–æ—Ç–æ–≤–æ –∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏` ‚Üí `Ready for Publication`

## File Structure

```
memory-bank/
‚îú‚îÄ‚îÄ core/
‚îÇ   ‚îú‚îÄ‚îÄ activeContext.md          # Main context file (English)
‚îÇ   ‚îú‚îÄ‚îÄ progress.md               # Progress tracking (English)
‚îÇ   ‚îî‚îÄ‚îÄ backup/                   # Backup directory
‚îÇ       ‚îú‚îÄ‚îÄ activeContext-2024-07-19T10-30-00-000Z.md
‚îÇ       ‚îî‚îÄ‚îÄ progress-2024-07-19T10-30-00-000Z.md
```

## Scripts

### **save-context.cjs**
Main script for saving context with automatic translation:
- Translates context to English
- Creates backups
- Commits changes to git
- Provides error handling

### **command-sync.cjs**
Extended with translation functionality:
- `translate-context` command
- Integrated translation function
- Comprehensive translation mappings

## Benefits

### **For AI/LLM Compatibility**
- **Universal accessibility** - Any AI assistant can read context
- **Language consistency** - All context in English
- **Better understanding** - Clear terminology for AI processing
- **Reduced confusion** - No mixed language content

### **For International Community**
- **Global accessibility** - Ready for international developers
- **Standardized format** - Consistent English documentation
- **Easy sharing** - No language barriers
- **Professional appearance** - English for global audience

### **For Development Workflow**
- **Automatic process** - No manual translation needed
- **Safe operation** - Backups created automatically
- **Git integration** - Automatic commits with clear messages
- **Error handling** - Robust operation with fallbacks

## Best Practices

### **For AI Assistants**
1. **Always use "save context"** command for context preservation
2. **Trust automatic translation** - system is comprehensive
3. **Check backups** if translation issues occur
4. **Use English context** for all AI operations

### **For Users**
1. **Use Russian commands** - translation happens automatically
2. **Check backup directory** if you need original files
3. **Trust the system** - translations are accurate and comprehensive
4. **Report issues** if translation problems occur

### **For Developers**
1. **Extend translation mappings** as needed
2. **Test translations** before deployment
3. **Maintain backup system** for safety
4. **Update documentation** when adding new terms

## Error Handling

### **Translation Errors**
- **Backup preservation** - Original files always saved
- **Partial translation** - System continues with available mappings
- **Error reporting** - Clear messages about issues
- **Manual fallback** - Option to restore from backup

### **Git Errors**
- **Translation still works** - Files translated even if commit fails
- **Manual commit option** - User can commit manually
- **Clear error messages** - Specific information about git issues
- **Safe operation** - No data loss in case of git problems

## Future Enhancements

### **Planned Features**
- **API integration** with translation services
- **Machine learning** for better translations
- **Custom translation mappings** per project
- **Multi-language support** for other languages

### **Potential Improvements**
- **Real-time translation** during editing
- **Translation quality scoring**
- **User feedback system** for translations
- **Integration with more AI tools**

## Conclusion

The Context Translation System ensures that all context in memory-bank is accessible to any AI assistant by automatically translating content to English. This creates a truly international and AI-compatible documentation system that supports global collaboration and development.

**Key Benefits:**
- ‚úÖ **Universal AI compatibility**
- ‚úÖ **Automatic translation process**
- ‚úÖ **Safe backup system**
- ‚úÖ **Git integration**
- ‚úÖ **Comprehensive coverage**
- ‚úÖ **Error handling**

**Usage:** Simply use the "save context" command, and the system will automatically translate and save your context in English for maximum AI/LLM compatibility.
description:
globs:
alwaysApply: false
---
