---
description: Architecture rule for project-architecture
globs: ["platform-core/**/*", "chrome-extension/src/background/*", "**/*.ts", "**/*.js"]
alwaysApply: trueaiPriority: high
aiCategory: system-design
---

<!-- AI: This is an architectural rule that defines system structure -->
<!-- AI: Priority: high -->
<!-- AI: Category: system-design -->

---
description: Architecture rule for project-architecture
globs: ["platform-core/**/*", "chrome-extension/src/background/*", "**/*.ts", "**/*.js"]
alwaysApply: trueaiPriority: high
aiCategory: system-design
---

# Project Overview
Agent-Plugins-Platform (APP) is a browser extension for running Python plugins via PyodIDE and the MCP protocol. Key priorities: security, performance, and developer experience.

## Architecture Patterns

### Core Compone.ts
- **Plugin Manager** (`core/plugin-manager.js`): manages plugin lifecycle
- **Host API** (`core/host-API.js`): provIDEs Python access to browser APIs
- **Workflow Engine** (`core/workflow-engine.js`): executes plugin workflows
- **MCP Bridge** (`Bridge/mcp-Bridge.js`):.js ↔ Python communication
- **PyodIDE Worker** (`Bridge/pyodIDE-worker.js`): isolated Python execution

### Plugin Structure
```
public/plugins/plugin-name/
├── manifest.json      # Metadata and permissions
├── mcp_server.py      # MCP protocol (Python)
├── workflow.json      # Workflow description
└──.icon.svg           #.icon
```

### Communication Flow
1. UI → Plugin Manager → MCP Bridge → PyodIDE Worker → Python Plugin
2. Python Plugin → Host API → Browser APIs
3. Resu.ts return via the same path
description:
globs:
alwaysApply: false
---
